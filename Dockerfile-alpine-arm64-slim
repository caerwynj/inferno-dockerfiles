FROM arm64v8/alpine:3.16 AS build

RUN apk add build-base libx11-dev libxext-dev linux-headers -t build

ENV INFERNO=/usr/inferno
ENV objtype=arm64

COPY . $INFERNO
WORKDIR $INFERNO

# setup a custom mkconfig
RUN echo > mkconfig ROOT=$INFERNO  \
    && echo >>mkconfig TKSTYLE=std \
    && echo >>mkconfig SYSHOST=Linux  \
    && echo >>mkconfig SYSTARG=Linux  \
    && echo >>mkconfig OBJTYPE=${objtype}    \
    && echo >>mkconfig 'OBJDIR=$SYSTARG/$OBJTYPE'  \
    && echo >>mkconfig '<$ROOT/mkfiles/mkhost-$SYSHOST' \
    && echo >>mkconfig '<$ROOT/mkfiles/mkfile-$SYSTARG-$OBJTYPE' 

# build code
RUN ./makemk.sh
ENV PATH="$INFERNO/Linux/${objtype}/bin:${PATH}"
RUN mk clean
RUN mk mkdirs 
RUN mk install
# RUN cd emu/Linux; mk install "CONF=emu-g"
RUN mk clean


FROM arm64v8/alpine:3.16

RUN apk add libx11 libxext

RUN addgroup -S inferno
RUN adduser --disabled-password --ingroup inferno inferno
USER inferno

ENV INFERNO=/usr/inferno
ENV objtype=arm64
WORKDIR $INFERNO
COPY --chown=inferno acme acme
#COPY fonts fonts
#COPY icons icons
COPY --chown=inferno keydb keydb
COPY --chown=inferno lib lib
COPY --chown=inferno locale locale
#COPY man man
COPY --chown=inferno mnt mnt
COPY --chown=inferno module module
COPY --chown=inferno n n
COPY --chown=inferno services services
COPY --chown=inferno tmp tmp
COPY --chown=inferno usr/inferno usr/inferno
COPY --chown=inferno --from=build /usr/inferno/Linux/${objtype}/bin/emu* /usr/inferno/Linux/${objtype}/bin/limbo /usr/inferno/Linux/${objtype}/bin/mk Linux/${objtype}/bin/
COPY --chown=inferno dis dis

ENV PATH="$INFERNO/Linux/${objtype}/bin:${PATH}"

EXPOSE 6666
ENTRYPOINT ["emu"]
